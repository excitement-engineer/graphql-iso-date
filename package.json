{
  "name": "graphql-iso-date",
  "version": "3.1.1",
  "description": "A set of RFC 3339 compliant date/time GraphQL scalar types.",
  "main": "dist/index.js",
  "homepage": "https://github.com/excitement-engineer/graphql-iso-date",
  "bugs": {
    "url": "https://github.com/excitement-engineer/graphql-iso-date/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/excitement-engineer/graphql-iso-date.git"
  },
  "scripts": {
    "examples": "npm run build && babel-node examples/index.js",
    "build": "babel src --ignore __tests__,*.test.js --out-dir dist/ && npm run build-dot-flow",
    "build-dot-flow": "find ./src -name '*.js' -not -path '*/__tests__*' -not -name '*.test.js' | while read filepath; do cp $filepath `echo $filepath | sed 's/\\/src\\//\\/dist\\//g'`.flow; done",
    "test": "npm run examples && npm run testonly && npm run check && npm run lint",
    "testonly": "jest",
    "watch": "jest --watch",
    "check": "flow check",
    "prepublish": ". ./resources/prepublish.sh",
    "lint": "standard"
  },
  "keywords": [
    "GraphQL",
    "Scalar",
    "Date",
    "Node",
    "ISO"
  ],
  "author": "Dirk-Jan Rutten <dirkjanrutten@gmail.com>",
  "license": "MIT",
  "files": [
    "dist",
    "README.md"
  ],
  "peerDependencies": {
    "graphql": "^0.5.0 || ^0.6.0 || ^0.7.0 || ^0.8.0-b || ^0.9.0"
  },
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-eslint": "^7.2.3",
    "babel-jest": "^20.0.1",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "eslint-plugin-flowtype": "^2.32.1",
    "flow-bin": "^0.47.0",
    "graphql": "^0.9.6",
    "jest": "^20.0.1",
    "mockdate": "^2.0.1",
    "standard": "^10.0.2"
  },
  "standard": {
    "parser": "babel-eslint",
    "ignore": [
      "flow-typed/"
    ],
    "plugins": [
      "flowtype"
    ],
    "globals": [
      "describe",
      "before",
      "beforeEach",
      "beforeAll",
      "after",
      "afterEach",
      "afterAll",
      "it",
      "expect"
    ]
  },
  "jest": {
    "testEnvironment": "node",
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    }
  }
}
